#!/bin/bash

# =========================================================================== #
# ============================= < PARAMETROS > ============================== # 
# =========================================================================== #
readonly TCPath=$(dirname $(readlink -f "$0"))
readonly TCLibPath="$TCPath/lib"
readonly TCScripts="$TCPath/scripts"
readonly TCWordlists="$TCPath/wordlists"
readonly TCPayloads="$TCPath/payloads"
readonly TCOutputs="$TCPath/outputs"
readonly TCTmp="/tmp/tc"
TCLang=$(echo $LANG | cut -d "." -f1)

# =========================================================================== #
# =========================== < Incluindo Libs > ============================ # 
# =========================================================================== #
source "$TCLibPath/Format.sh"
source "$TCScripts/WebRecon.sh"
source "$TCScripts/dependencias.sh"
source "$TCLibPath/Ajuda.sh"
source "$TCScripts/Funcoes.sh"


# =========================================================================== #
# =========================== < Opcoes default > ============================ # 
# =========================================================================== #
wlsubdominio="$TCWordlists/subdominios.txt"
wldiretorio="$TCWordlists/diretorios.txt"
# =========================================================================== #
# ======================== < Checando Permissoes > ========================== # 
# =========================================================================== #
usr=$(whoami)

if [ $usr != "root" ]
then
        echo -e "${vermbold}\n\n[-] Necessario privilegio de root para rodar.\n\n${normal}"
        exit
fi

if [ "$1" == "-d" ]
then
	dependencias
	exit
fi
if [ "$1" == "-h" ]
then
	tc_ajuda
	exit
fi

# =========================================================================== #
# ======================== < Iniciando Processos > ========================== # 
# =========================================================================== #

tc_banner

# =========================================================================== #
# ===================== < Verificando dependencias > ======================== # 
# =========================================================================== #

centralizado "git: https://github.com/lokisuite/TwinCrows.git\n"
centralizado "${vermelho}v 1.3.0\n${normal}"
mkdir -p /tmp/tc 2> /dev/null

echo -e "\n\n${cinza}TwinCrows e uma suite de ferramentas de reconhecimento e enumeracao que auxilia na obtencao de informacoes de alvos. A suite permite reconhecimento desde infra a tecnologias e servicos operantes reunindo varias abordagens diferentes.\nEnjoy!!${normal}\n"

dependencias() {
	local dep=()
	for lin in $(cat $TCLibPath/dependencias)
	do
		if [ "$lin" == "postgresql" ]
		then
			ins=$(dpkg --get-selections | grep postgresql | wc -l)
			if [ "$ins" == 0 ]
			then
				echo -e "${vermbold}[-] $lin nao instalado.${normal}"
				dep+=($lin)
			fi
		elif [ "$lin" == "metasploit-framework" ]
		then
			ins=$(builtin type -p msfconsole | wc -l)
			if [ "$ins" == 0 ]
			then
				echo -e "${vermbold}[-] $lin nao instalado.${normal}"
				dep+=($çin)
			fi
		else
			ins=$(builtin type -p $lin | wc -l)
			if [ "$ins" == 0 ]
			then
				echo -e "${vermbold}[-] $lin nao instalado.${normal}"
				dep+=($lin)
			fi
		fi
	done
	sleep 0.05
	if [ ! -z "$dep" ]
	then
		echo -e "\n${vermbold}Existem pacotes a serem instalados."
		echo -e "Para prosseguir, execute ${verdebold} $0 -d ${normal}\n\n"
		exit
	fi
	centralizado "${azulbold}[+] Todas as dependencias ja estao instaladas.${normal}"
	echo -e "\n"
}

dependencias



# =========================================================================== #
# ================================ < Menu > ================================= # 
# =========================================================================== #
trap sair EXIT


nvl1="${vermbold}┌─[${azulbold}Twin${normalbold}\xE2\x98\xA0${azulbold}Crows${vermbold}]\n└─────►${normal}"

while :
do

	echo
	echo -e "${verde}"
	echo -e "01 - HTML Parsing                     08 - Pagesearch"
	echo -e "02 - whois                            09 - PingSweep"
	echo -e "03 - Mapeamento de dominio            10 - Wordlists Work"
	echo -e "04 - Bruteforce de subdominios        11 - Analise de metadados"
	echo -e "05 - Pesquisa de DNS reverso          12 - Enumeration"
	echo -e "06 - Dirsearch                        13 - Payloads msfvenom"
	echo -e "07 - Whatweb"
	echo
	echo -e "0 - sair${normal}"

	echo -e "${normalbold}"
	printf $nvl1
	read  -p ' ' opcao

	echo

	case $opcao in

# =========================================================================== #
# =========================== < HTML Parsing > ============================== #
# =========================================================================== #
	1|01)
		tc_html_parsing $0
	;;
# =========================================================================== #
# =============================== < Whois > ================================= #
# =========================================================================== #
	2|02)
		tc_whois $0
	;;
# =========================================================================== #
# ====================== < Mapeamento de dominio > ========================== #
# =========================================================================== #
	3|03) 
		tc_map_dom $0
	;;
# =========================================================================== #
# ==================== < Bruteforce de subdominio > ========================= #
# =========================================================================== #
	4|04)
		tc_bf_subd $0 $wlsubdominio
	;;
# =========================================================================== #
# =========================== < DNS reverso > =============================== #
# =========================================================================== #
	5|05)
		tc_dns_rev $0
	;;
# =========================================================================== #
# ============================ < Dirsearch > ================================ #
# =========================================================================== #
	6|06)
		tc_dirsearch $0 $wldiretorio
	;;
# =========================================================================== #
# ============================= < Whatweb > ================================= #
# =========================================================================== #
	7|07)
		tc_whatweb $0
	;;
# =========================================================================== #
# =========================== < Pagesearch > ================================ #
# =========================================================================== #
	8|08)
		tc_pagesearch $0
	;;
# =========================================================================== #
# ============================ < PingSweep > ================================ #
# =========================================================================== #
	9|09)
		tc_pingsweep $0
	;;
# =========================================================================== #
# ========================= < Mutacao de wordlist > ========================= #
# =========================================================================== #
	10)
		nvl2="${vermbold}┌─[${azulbold}Twin${normalbold}\xE2\x98\xA0${azulbold}Crows${vermbold}]──[${azulbold}Wordlists${vermbold}]\n└─────►${normal}"
		tc_wl_wk $0
	;;
# =========================================================================== #
# ================== < Analise de metadados de arquivos > =================== #
# =========================================================================== #
        11)
                tc_metadados $0
        ;;
# =========================================================================== #
# ================== < Analise de metadados de arquivos > =================== #
# =========================================================================== #
        12)
		nvl2="${vermbold}┌─[${azulbold}Twin${normalbold}\xE2\x98\xA0${azulbold}Crows${vermbold}]──[${azulbold}Enumeration${vermbold}]\n└─────►${normal}"
                tc_enumeration $0
        ;;
# =========================================================================== #
# ============================ < Payloads > ================================= #
# =========================================================================== #
        13)
		nvl2="${vermbold}┌─[${azulbold}Twin${normalbold}\xE2\x98\xA0${azulbold}Crows${vermbold}]──[${azulbold}Payloads${vermbold}]\n└─────►${normal}"
                tc_payload $0
        ;;
# =========================================================================== #
# ================================ < Sair > ================================= #
# =========================================================================== #
	0)
		sair
	;;
# =========================================================================== #
# =========================== < Opcao invalida > ============================ #
# =========================================================================== #
	*)
		echo -e "${vermbold}OPÇÃO INVÁLIDA!!\n\n"
	;;



	esac
done

